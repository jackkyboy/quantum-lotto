# /Users/apichet/quantum_lotto/src/run/run_visualizations.py

# /Users/apichet/quantum_lotto/src/run/run_visualizations.py
# /Users/apichet/quantum_lotto/src/run/run_visualizations.py

# ============================================
# üõ† Path Fix (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ import ‡∏à‡∏≤‡∏Å src ‡πÑ‡∏î‡πâ)
# ============================================
import sys
import os
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

# ============================================
# üîß Imports (‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÅ‡∏Å‡πâ path ‡πÅ‡∏•‡πâ‡∏ß)
# ============================================
from visualization.quantum_viz import (
    collapse_from_quantum_field,
    visualize_quantum_field_and_superposition,
    visualize_digit_entanglement,
    extract_top_2digit_from_qfield
)
from quantum_wavefield import generate_quantum_likelihood_field
from config import generate_seed_from_date, make_rngs  # ‚úÖ ‡πÉ‡∏ä‡πâ local RNG ‡πÅ‡∏ó‡∏ô lock_seed

from datetime import datetime
from typing import Optional


# ============================================
# üéØ Main Visualization Runner
# ============================================
def run_quantum_field_visualizations(draw_date: Optional[str] = None, seed: Optional[int] = None, np_rng=None):
    """
    ‡∏£‡∏±‡∏ô‡∏ä‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á Quantum Field:
    - Likelihood Field
    - Collapse Simulation
    - Digit Entanglement Heatmap
    - Top 2-digit likelihood

    Parameters
    ----------
    draw_date : Optional[str]
        ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö 'YYYY-MM-DD' ‡∏ñ‡πâ‡∏≤‡∏™‡πà‡∏á‡∏°‡∏≤‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á seed ‡πÅ‡∏ö‡∏ö deterministic
    seed : Optional[int]
        ‡πÉ‡∏ä‡πâ‡πÅ‡∏ó‡∏ô draw_date ‡πÑ‡∏î‡πâ (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡πà‡∏á np_rng)
    np_rng : Optional[np.random.Generator]
        Local RNG ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏•‡∏±‡∏Å
    """
    # ‚úÖ ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° RNG ‡πÅ‡∏ö‡∏ö local
    if np_rng is None:
        if seed is None and draw_date:
            # ‡πÅ‡∏õ‡∏•‡∏á draw_date -> seed
            try:
                dt = datetime.strptime(draw_date, "%Y-%m-%d").date()
                seed = generate_seed_from_date(dt.isoformat())
            except ValueError:
                raise ValueError("‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö draw_date ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô YYYY-MM-DD")
        elif seed is None and not draw_date:
            # fallback ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏≠‡∏∞‡πÑ‡∏£‡∏°‡∏≤‡πÄ‡∏•‡∏¢)
            seed = 42
        _, np_rng = make_rngs(seed)

    # ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Quantum Field (‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏™‡πà‡∏á np_rng ‡∏ñ‡πâ‡∏≤‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö)
    try:
        # ‡∏ñ‡πâ‡∏≤ generate_quantum_likelihood_field ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö np_rng
        df_qfield, extra = generate_quantum_likelihood_field(np_rng=np_rng)
    except TypeError:
        # ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö np_rng
        df_qfield, extra = generate_quantum_likelihood_field()

    # üåå 1) Visualize Quantum Likelihood Field & Superposition Matrix
    visualize_quantum_field_and_superposition(df_qfield)

    # üß† 2) Collapse Simulation ‚Üí ‡∏Ñ‡∏±‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡πà‡∏ô
    # ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÉ‡∏ä‡πâ np_rng ‡∏Å‡πà‡∏≠‡∏ô ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö ‡∏Ñ‡πà‡∏≠‡∏¢‡∏™‡πà‡∏á seed
    collapsed = None
    try:
        collapsed = collapse_from_quantum_field(df_qfield, n=5, np_rng=np_rng)
    except TypeError:
        try:
            # ‡πÉ‡∏ä‡πâ seed ‡∏à‡∏≤‡∏Å RNG ‡πÄ‡∏î‡∏¥‡∏° (‡∏î‡∏∂‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á ‡πÄ‡∏•‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ó‡∏ô)
            collapsed = collapse_from_quantum_field(df_qfield, n=5, seed=seed if 'seed' in locals() else 42)
        except TypeError:
            # ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏±‡πâ‡∏á np_rng/seed ‡πÉ‡∏ô signature
            collapsed = collapse_from_quantum_field(df_qfield, n=5)

    # üß¨ 3) Heatmap ‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏ß‡∏û‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç (Digit Entanglement)
    visualize_digit_entanglement(df_qfield)

    # üî¢ 4) Extract ‡πÄ‡∏•‡∏Ç 2 ‡∏ï‡∏±‡∏ß‡∏ó‡πâ‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÄ‡∏î‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
    top_2digit_df = extract_top_2digit_from_qfield(df_qfield, top_n=10)

    return df_qfield, top_2digit_df, collapsed


# ============================================
# üöÄ CLI Entry Point
# ============================================
if __name__ == "__main__":
    # df_q, top2, collapsed = run_quantum_field_visualizations(draw_date="2025-08-16")
    df_q, top2, collapsed = run_quantum_field_visualizations(seed=20250816)

    print("\nüéØ Collapsed Numbers:", collapsed)
    print("\nüîù Top 2-digit Numbers:\n", top2)

# üìÅ /Users/apichet/quantum_lotto/src/data/lotto_add_new_draw.py
# üìÅ src/data/lotto_add_new_draw.py

# üìÅ src/data/lotto_add_new_draw_safe.py

import pandas as pd
from datetime import datetime

# ====== üóÇ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏° ======
path = "/Users/apichet/quantum_lotto/src/data/lotto_110year.csv"
backup_path = path.replace(".csv", "_backup_before_fix.csv")
df = pd.read_csv(path)

# üõü ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô
df.to_csv(backup_path, index=False)
print(f"üì¶ ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ß‡πâ‡∏ó‡∏µ‡πà: {backup_path}")

# ====== üÜï ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà ======
new_rows = [
    ["1‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°2568",  "811852", "52", "852", "501", "42", "525", "512", "891"],
    ["16‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°2568", "245324", "24", "324", "261", "71", "995", "084", "336"],
    ["1‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°2568",  "949246", "46", "246", "911", "69", "680", "261", "918"],
    ["16‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô2568", "507392", "92", "392", "060", "17", "243", "299", "736"],
    ["1‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô2568",  "559352", "52", "352", "201", "34", "349", "044", "307"],
]

columns = [
    "date", "first_prize", "last2", "front3_1", "front3_2",
    "last3_1", "last3_2", "last3_3", "last3_4"
]
new_df = pd.DataFrame(new_rows, columns=columns)

# ====== üóì ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏ó‡∏¢‡πÄ‡∏õ‡πá‡∏ô datetime ======
month_map = {
    "‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°": "01", "‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå": "02", "‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°": "03", "‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô": "04",
    "‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°": "05", "‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô": "06", "‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°": "07", "‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°": "08",
    "‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô": "09", "‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°": "10", "‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô": "11", "‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°": "12"
}

def parse_thai_date(date_str):
    for th, num in month_map.items():
        if th in date_str:
            day = ''.join(filter(str.isdigit, date_str.split(th)[0]))
            year_th = ''.join(filter(str.isdigit, date_str.split(th)[1]))
            return datetime.strptime(f"{int(day):02d}-{num}-{int(year_th)-543}", "%d-%m-%Y")
    return pd.NaT

# ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ new_df ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
new_df["date"] = new_df["date"].apply(parse_thai_date)

# ====== ‚ú® ‡πÅ‡∏õ‡∏•‡∏á date ‡∏Ç‡∏≠‡∏á df ‡πÄ‡∏î‡∏¥‡∏°‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô datetime (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß) ======
if df["date"].dtype == "O":
    df["date"] = pd.to_datetime(df["date"], errors="coerce")

# ====== üß† ‡∏£‡∏ß‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏° ======
existing_dates = set(df["date"].dropna())
filtered_new = new_df[~new_df["date"].isin(existing_dates)]

# ====== üîÅ ‡∏£‡∏ß‡∏°‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ ======
final_df = pd.concat([df, filtered_new], ignore_index=True)
final_df = final_df.sort_values("date")

# ====== üíæ ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏° ======
final_df.to_csv(path, index=False)
print(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà {len(filtered_new)} ‡∏á‡∏ß‡∏î ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
